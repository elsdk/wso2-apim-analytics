{
  "name": "APIM TOTAL API TRAFFIC",
  "id": "APIMTotalApiTraffic",
  "thumbnailURL": "",
  "configs": {
    "pubsub": {
      "types": ["subscriber"]
    },
    "providerConfig" : {
      "configs": {
        "type": "SiddhiStoreDataProvider", 
        "config": {
          "siddhiApp": "@App:name('APIM_ERROR_SUMMARY')\ndefine stream ErrorSummaryStream (apiName string, apiVersion string, apiResourceTemplate string, apiMethod string, apiCreator string,\napiCreatorTenantDomain string, applicationId string, applicationName string, applicationOwner string, responseCode int,\n_4xx int, _5xx int, successCount int, faultCount int, throttledCount int, timestamp long);  @primaryKey('API_ID')  @store(type=\"rdbms\" , datasource= \"AM_DB\")  define table AM_API(API_ID int,API_PROVIDER string,API_NAME string,API_VERSION string,CONTEXT string,CONTEXT_TEMPLATE string,API_TIER string,CREATED_BY string,CREATED_TIME string,UPDATED_BY string,UPDATED_TIME string);   @primaryKey('URL_MAPPING_ID') @store(type= \"rdbms\" , datasource= \"AM_DB\")  define table AM_API_URL_MAPPING(URL_MAPPING_ID int,API_ID int,HTTP_METHOD string,AUTH_SCHEME string,URL_PATTERN string,THROTTLING_TIER string,MEDIATION_SCRIPT string); @primaryKey('APPLICATION_ID') @store(type= \"rdbms\" , datasource= \"AM_DB\")  define table AM_APPLICATION(APPLICATION_ID int, NAME string, SUBSCRIBER_ID int, APPLICATION_TIER string, CALLBACK_URL string, DESCRIPTION string, APPLICATION_STATUS  string, GROUP_ID string, CREATED_BY string, CREATED_TIME string, UPDATED_BY string, UPDATED_TIME string, UUID string, TOKEN_TYPE string); @store(type = 'rdbms', datasource = 'APIM_ANALYTICS_DB',field.length =  \"apiMethod:40 \") define aggregation ApiErrorAnalysisAgg\nfrom ErrorSummaryStream\nselect apiName, apiVersion, apiMethod, apiResourceTemplate, applicationName, applicationOwner, responseCode, sum(_4xx) as _4xx,\nsum(_5xx) as _5xx, sum(successCount) as successCount, sum(faultCount) as faultCount, sum(throttledCount) as throttledCount,\napiCreator, apiCreatorTenantDomain\ngroup by apiName, apiVersion, responseCode, apiResourceTemplate, applicationId\naggregate by timestamp every seconds...years;",
          "queryData": {
            "apiusagequery": "from ApiErrorAnalysisAgg on apiCreatorTenantDomain=='{{tenantDomain}}' within {{from}}L, {{to}}L per \"{{per}}s\" select apiName, apiVersion, sum(successCount) as successCount, sum(faultCount) as faultCount, sum(throttledCount) as throttledCount group by apiName, apiVersion order by successCount desc limit {{limit}};"
          },
          "publishingInterval": 60
        }
      }
    },
    "options": [
      {
        "id": "header",
        "title": "Header",
        "type": {
          "name": "BOOLEAN",
          "possibleValues": [
            true,
            false
          ]
        },
        "defaultValue": true
      },
      {
        "id": "headerTitle",
        "title": "Widget Title",
        "type": {
          "name": "TEXT"
        },
        "defaultValue": "Total Api Traffic"
      }
    ]
  }
}
