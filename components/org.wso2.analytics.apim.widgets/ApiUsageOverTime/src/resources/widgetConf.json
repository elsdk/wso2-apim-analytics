{
  "name": "API USAGE OVER TIME",
  "id": "ApiUsageOverTime",
  "thumbnailURL": "",
  "configs": {
    "pubsub": {
      "types": ["subscriber"]
    },
    "providerConfig" : {
      "configs": {
        "type": "SiddhiStoreDataProvider",
        "config": {
          "siddhiApp": "@App:name('ApiUsageOverTimeSiddhi') @primaryKey('API_ID') @store(type=\"rdbms\" , datasource=\"AM_DB\") define table AM_API(API_ID int,API_PROVIDER string,API_NAME string,API_VERSION string,CONTEXT string,CONTEXT_TEMPLATE string,API_TIER string,CREATED_BY string,CREATED_TIME string,UPDATED_BY string,UPDATED_TIME string); @primaryKey('SUBSCRIPTION_ID') @store(type=\"rdbms\" , datasource=\"AM_DB\") define table AM_SUBSCRIPTION(SUBSCRIPTION_ID int,TIER_ID string,API_ID int,LAST_ACCESSED string,APPLICATION_ID int,SUB_STATUS string,SUBS_CREATE_STATE string,CREATED_BY string,CREATED_TIME string,UPDATED_BY string,UPDATED_TIME string,UUID string); @primaryKey('SUBSCRIBER_ID') @store(type=\"rdbms\" , datasource=\"AM_DB\") define table AM_SUBSCRIBER(SUBSCRIBER_ID int,USER_ID string, TENANT_ID int, EMAIL_ADDRESS string, DATE_SUBSCRIBED string, CREATED_BY string,CREATED_TIME string, UPDATED_BY string, UPDATED_TIME string); @primaryKey('APPLICATION_ID') @store(type='rdbms' , datasource='AM_DB') define table AM_APPLICATION(APPLICATION_ID int,NAME string,SUBSCRIBER_ID int,APPLICATION_TIER string,CALLBACK_URL string,DESCRIPTION string,APPLICATION_STATUS string,GROUP_ID string,CREATED_BY string,CREATED_TIME string,UPDATED_BY string,UPDATED_TIME string,UUID string,TOKEN_TYPE string); define stream Request (meta_clientType string, applicationConsumerKey string, applicationName string, applicationId string, applicationOwner string, apiContext string,apiName string, apiVersion string, apiResourcePath string, apiResourceTemplate string, apiMethod string, apiCreator string, apiCreatorTenantDomain string, apiTier string, apiHostname string, username string, userTenantDomain string, userIp string, userAgent string, requestTimestamp long, throttledOut bool, responseTime long, serviceTime long, backendTime long, responseCacheHit bool, responseSize long, protocol string, responseCode int, destination string, securityLatency long, throttlingLatency long, requestMedLat long, responseMedLat long, backendLatency long, otherLatency long, gatewayType string, label string); @store(type = 'rdbms', datasource = 'APIM_ANALYTICS_DB') @purge(enable='true', interval='60 min', @retentionPeriod(sec='1 day', min='72 hours', hours='90 days', days='1 year', months='2 years', years='3 years')) define aggregation ApiUserPerAppAgg from Request select apiName, apiVersion, apiContext, apiCreator, apiCreatorTenantDomain, apiHostname, applicationId, applicationName, applicationOwner, username, userTenantDomain, count() as totalRequestCount, gatewayType, label,'default' as regionalID group by apiContext,apiHostname, applicationId, username, userTenantDomain aggregate by requestTimestamp every seconds...years;",
          "queryData": {
            "apiusagequery": "from ApiUserPerAppAgg on apiCreatorTenantDomain=='{{tenantDomain}}' AND {{filterCondition}} within {{from}}L, {{to}}L per \"{{per}}s\" select apiName,apiCreator,sum(totalRequestCount) as RequestCount,apiVersion,AGG_TIMESTAMP group by apiName,apiCreator,apiVersion,AGG_TIMESTAMP order by AGG_TIMESTAMP asc;",
            "appQuery": "from AM_APPLICATION on {{appIdList}} select NAME,CREATED_BY;",
            "apiidquery": "from AM_API on {{contextContainsCondition}} AND ({{filterCondition}}) select API_ID",
            "apisubquery": "from AM_SUBSCRIPTION on {{apiList}} select APPLICATION_ID;"
          },
          "publishingInterval": 360000
        }
      }
    },
    "options": [
      {
        "id": "header",
        "title": "Header",
        "type": {
          "name": "BOOLEAN",
          "possibleValues": [
            true,
            false
          ]
        },
        "defaultValue": true
      },
      {
        "id": "headerTitle",
        "title": "Widget Title",
        "type": {
          "name": "TEXT"
        },
        "defaultValue": "API Usage Over Time"
      }
    ]
  }
}
