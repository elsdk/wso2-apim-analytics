{
  "name": "APIM APP RESOURCE USAGE",
  "id": "APIMAppResourceUsage",
  "thumbnailURL": "",
  "configs": {
    "pubsub": {
      "types": ["subscriber"]
    },
    "providerConfig" : {
      "configs": {
        "type": "SiddhiStoreDataProvider",
        "config": {
          "siddhiApp": "@App:name('APIMAppResourceUsageSiddhi') @primaryKey('APPLICATION_ID') @store(type='rdbms' , datasource='AM_DB') define table AM_APPLICATION(APPLICATION_ID int,NAME string,SUBSCRIBER_ID int,APPLICATION_TIER string,CALLBACK_URL string,DESCRIPTION string,APPLICATION_STATUS string,GROUP_ID string,CREATED_BY string,CREATED_TIME string,UPDATED_BY string,UPDATED_TIME string,UUID string,TOKEN_TYPE string); define stream Request (meta_clientType string, applicationConsumerKey string, applicationName string, applicationId string, applicationOwner string, apiContext string,apiName string, apiVersion string, apiResourcePath string, apiResourceTemplate string, apiMethod string, apiCreator string, apiCreatorTenantDomain string, apiTier string, apiHostname string, username string, userTenantDomain string, userIp string, userAgent string, requestTimestamp long, throttledOut bool, responseTime long, serviceTime long, backendTime long, responseCacheHit bool, responseSize long, protocol string, responseCode int, destination string, securityLatency long, throttlingLatency long, requestMedLat long, responseMedLat long, backendLatency long, otherLatency long, gatewayType string, label string); @store(type = 'rdbms', datasource = 'APIM_ANALYTICS_DB',field.length = 'apiHostname:200, apiMethod:20') @purge(enable='true', interval='60 min', @retentionPeriod(sec='5 minutes', min='72 hours', hours='90 days', days='1 year', months='10 years')) define aggregation ApiResPathPerApp from Request select apiName, apiVersion, apiContext, apiCreator, apiCreatorTenantDomain, apiHostname, applicationId, applicationName, apiResourceTemplate, apiMethod, count() as totalRequestCount, gatewayType, label,'default' as regionalID group by apiContext, apiHostname, applicationId, apiResourceTemplate, apiMethod aggregate by requestTimestamp every seconds...years;",
          "queryData": {
            "applicationQuery": "from AM_APPLICATION on {{applicationUUID}} select APPLICATION_ID,UUID;",
            "resourceUsageQuery": "from ApiResPathPerApp on {{application}} within {{from}}L, {{to}}L per '{{per}}s' select apiName,apiVersion,apiCreator,apiMethod,apiResourceTemplate,sum(totalRequestCount) as RequestCount group by apiName,apiVersion,apiCreator,apiMethod,apiResourceTemplate order by RequestCount desc limit {{limit}};"
          },
          "publishingInterval": 360000
        }
      }
    },
    "options": [
      {
        "id": "header",
        "title": "Header",
        "type": {
          "name": "BOOLEAN",
          "possibleValues": [
            true,
            false
          ]
        },
        "defaultValue": true
      },
      {
        "id": "headerTitle",
        "title": "Widget Title",
        "type": {
          "name": "TEXT"
        },
        "defaultValue": "API Resource Usage per Application"
      }
    ]
  }
}
